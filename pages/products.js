import Head from "next/head";
import Image from "next/image";
import { Inter } from "next/font/google";
import styles from "@styles/Home.module.scss";
import { ApolloClient, InMemoryCache, ApolloProvider, gql } from '@apollo/client';
import Container from "@components/Container";
import Link from "next/link";
import products from '@data/products.json';
import Begginer from "@components/Beginner";

const inter = Inter({ subsets: ["latin"] });

export default function Products({products}) {
  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className={`${styles.main} ${inter.className}`}>

      <Container className={styles.productsContainer}>
        <div className={styles.productsList}>
          {products.map(product => {
              const { featuredImage } = product;

              return (
                <Link href={`/product/${product.slug}`} className={styles.productItem} key={product.id}>
                  <Image width="1200" height="750" src={featuredImage.node.sourceUrl} alt={featuredImage.node.altText} priority />
                  <h3 className={styles.productTitle}>{product.title}</h3>
                  <div className={styles.productDesc} dangerouslySetInnerHTML={{ __html: product.content }} />
                </Link>
              )
          })}
        </div>
        </Container>

        <div className={styles.description}>
          <p>
            Get started with&nbsp;
            <code className={styles.code}><a href="/" alt="Projects Engine">Projects Engine</a></code>
          </p>
        </div>

       <Begginer />
      </main>
    </>
  );
}

export async function getStaticProps() {

  const client = new ApolloClient({
    uri: process.env.WP_API,
    cache: new InMemoryCache()
  });

  const response = await client.query({
    query: gql`
      query NewQuery {
        products {
          edges {
            node {
              id
              productId
              title
              content
              date
              slug
              uri
              product {
                productId
                productPrice
              }
              featuredImage {
                node {
                  mediaItemId
                  altText
                  sourceUrl
                }
              }
            }
          }
        }
      }
    `
  });

  const products = response.data.products.edges.map(({node}) => {
    const data = {
      ...node,
      ...node.product,
      ...node.featuredImage.node
    }

    return data;
  })

  return {
    props: {
      products 
    }
  }
}
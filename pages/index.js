import Head from "next/head";
import Image from "next/image";
import { Inter } from "next/font/google";
import Layout from "@components/Layout";
import styles from "@styles/Home.module.scss";
import { ApolloClient, InMemoryCache, gql } from '@apollo/client';
import Header from "@components/Header";
import Container from "@components/Container";
import Footer from "@components/Footer";
// import products from '@data/products.json';

const inter = Inter({ subsets: ["latin"] });

export default function Home({products}) {
  return (
    <Layout className={styles.layoutIndex}>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Header />
      <main className={`${styles.main} ${inter.className}`}>

        <Container className={styles.productsContainer}>
          <div className={styles.productsList}>
            {products.map(product => {
                const { featuredImage } = product;

                return (
                  <div className={styles.productItem} key={product.id}>
                    <Image width="1200" height="750" src={featuredImage.node.sourceUrl} alt={featuredImage.node.altText} priority />
                    <h3 className={styles.productTitle}>{product.title}</h3>
                    <div className={styles.productDesc} dangerouslySetInnerHTML={{ __html: product.content }} />
                  </div>
                )
            })}
          </div>
        </Container>

        <div className={styles.description}>
          <p>
            Get started by editing&nbsp;
            <code className={styles.code}>pages/index.js</code>
          </p>
          <div>
            <a
              href="https://vercel.com?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app"
              target="_blank"
              rel="noopener noreferrer"
            >
              By{" "}
              <Image
                src="/vercel.svg"
                alt="Vercel Logo"
                className={styles.vercelLogo}
                width={100}
                height={24}
                priority
              />
            </a>
          </div>
        </div>

        <div className={styles.center}>
          <Image
            className={styles.logo}
            src="/logo.png"
            alt="Projects Engine"
            width={300}
            height={37}
            priority
          />
        </div>

        <div className={styles.grid}>
          <a href="#" className={styles.card} target="_blank" rel="noopener noreferrer">
            <h2>WordPress <span>-&gt;</span></h2>
            <p>Leading and highly customizable content management system for websites and blogs.</p>
          </a>

          <a href="#" className={styles.card} target="_blank" rel="noopener noreferrer">
            <h2>WooCommerce <span>-&gt;</span></h2>
            <p>WordPress-integrated e-commerce plugin for easy online store&nbsp;setup and management.</p>
          </a>

          <a href="#" className={styles.card} target="_blank" rel="noopener noreferrer">
            <h2>Gutenberg <span>-&gt;</span></h2>
            <p>Explore the transformative world of the WordPress editor that revolutionizes content&nbsp;creation.</p>
          </a>

          <a href="#" className={styles.card} target="_blank" rel="noopener noreferrer">
            <h2>Plugins <span>-&gt;</span></h2>
            <p>Plugins are used to enhance the overall performance and appearance of your&nbsp;website.</p>
          </a>
        </div>
      </main>
      <Footer />
    </Layout>
  );
}

export async function getStaticProps() {

  const client = new ApolloClient({
    uri: process.env.WP_API,
    cache: new InMemoryCache()
  });

  const response = await client.query({
    query: gql`
      query NewQuery {
        products {
          edges {
            node {
              id
              productId
              title
              content
              date
              slug
              uri
              product {
                productId
                productPrice
              }
              featuredImage {
                node {
                  mediaItemId
                  altText
                  sourceUrl
                }
              }
            }
          }
        }
      }
    `
  });

  const products = response.data.products.edges.map(({node}) => {
    const data = {
      ...node,
      ...node.product,
      ...node.featuredImage.node
    }

    return data;
  })

  return {
    props: {
      products 
    }
  }
}